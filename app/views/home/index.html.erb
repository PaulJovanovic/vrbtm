<div class="container phs">
  <div class="row nmhxs">
    <div class="col-sm-7 phxs">
      <div class="mtm phs pvxs bg-16 bss bwhs bwts bwbm bc-2">
        <%= form_for :post, url: posts_path, method: :post, html: { id: "user-posts-create" } do |f| %>
          <%= f.hidden_field :quote_id, class: "js-post-quote-id" %>
        <% end %>
        <%= form_for :quote, url: quotes_path, method: :post, remote: true, html: { id: "quotes-create" } do |f| %>
          <%= f.hidden_field :citable_type, class: "js-quote-citable-type", value: "Source" %>
          <%= f.hidden_field :citable_id, class: "js-quote-citable-id" %>
          <%= f.text_area :text, placeholder: "Quote someone", class: "paxs bss bwas bc-10 full-width" %>
          <%= f.text_field :name, placeholder: "Who said it?", class: "phxs pvxxxs mtxxxs bss bwas bc-10 full-width js-quote-source-name" %>
          <div class="mtxxs text-right">
            <%= f.submit "post", class: "btn btn-primary pvxxxs fsxxs fwl" %>
          </div>
        <% end %>
      </div>
      <div class="mtm">
        <% @posts.order("created_at desc").each do |post| %>
          <div class="mtxxxs-plus phs pvxs bg-16 bss bwhs bwts bwbm bc-2">
            <div class="row nmhxxxs">
              <div class="col-xs-1 phxxxs">
                <div class="dvm bg-2"></div>
              </div>
              <div class="col-xs-11 phxxxs">
                <div class="fsxxxxs fws c-8 pull-right">
                  <abbr class="js-timeago" title="<%= post.created_at.getutc.iso8601 %>">
                    <%= post.created_at.to_s %>
                  </abbr>
                </div>
                <%= link_to user_path(post.user), class: "fsxxxs fwl c-teal" do %>
                  <div>
                    <%= post.user.name %>
                  </div>
                <% end %>
                <div class="mtxxxs fsxs c-2 lhxs">
                  <i class="fa fa-quote-left c-10"></i>
                    <%= post.quote.text %>
                  <i class="fa fa-quote-right c-10"></i>
                </div>
              </div>
            </div>
            <div class="mtxxxs fss fwl text-right">
              <%= link_to post.quote.name, send("#{post.quote.citable_type.underscore}_path", post.quote.citable.slug), class: "c-teal" %>
            </div>
            <div class="">
              <%= form_for :like, url: likes_path, method: post.liked_by?(current_user) ? :delete : :post, remote: true, html: { class: "js-like" } do |f| %>
                <%= f.hidden_field :likable_type, value: "Post", class: "js-like-likable-type" %>
                <%= f.hidden_field :likable_id, value: post.id, class: "js-like-likable-id" %>
                <%= f.submit post.liked_by?(current_user) ? "Unlike" : "Like", class: "c-teal bg-n pan js-like-submit" %>
              <% end %>
            </div>
            <div id="Post-<%= post.id %>-likes" class="<%= "hide" if post.likes_count == 0 %>">
              <span class="js-like-count">
                <%= post.likes_count %>
              </span>
              <span class="js-like-text">
                <%= "like".pluralize(post.likes_count) %>
              </span>
            </div>
          </div>
        <% end %>
      </div>
    </div>
    <div class="col-sm-5 phxs mtm">
      People You May Know
      <% User.all.each do |user| %>
        <% if !current_user.following?(user) && current_user.id != user.id %>
          <div class="mtxxxs">
            <%= link_to "#{user.name}", user_path(user), class: "c-teal" %>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<script>
  var users = new Bloodhound({
    datumTokenizer: function (d) {
      return Bloodhound.tokenizers.whitespace(d.value);
    },
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    remote: {
      url: '/sources/search?name=%QUERY',
      filter: function (users) {
        return $.map(users, function (user) {
          return {
            id: user.id,
            name: user.name,
            tokens: user.name.split(" ")
          };
        });
      }
    }
  });

  users.initialize();

  $(".js-quote-source-name").keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });

  $('.js-quote-source-name').keyup(function(event) {
    $(".js-quote-citable-id").val("");
    if ($(this).val().trim().charAt(0) == '@') {
      $(".js-quote-citable-type").val("User");
    } else {
      $(".js-quote-citable-type").val("Source");
    }
  });

  $('.js-quote-source-name').typeahead(null, {
    name: 'users',
    source: users.ttAdapter(),
    templates: {
      suggestion: Handlebars.compile([
        '<p>{{name}}</p>'
      ].join(''))
    }
  }).on('typeahead:selected', function(event, selection) {
    $(".js-quote-citable-id").val(selection.id);
    $(".js-quote-source-name").val(selection.name);
  });

  $("#quotes-create").on("ajax:success", function(event, data, status, xhr) {
    $(".js-post-quote-id").val(data.id);
    $("#user-posts-create").submit();
  });

  $("#quotes-create input[type=submit]").click(function(event) {
    var successTrigger = function(source_id) {
      $(".js-quote-citable-id").val(source_id);
      $("#quotes-create").submit();
    };

    event.preventDefault();
    if ($(".js-quote-citable-id").val().length > 0) {
      successTrigger($(".js-quote-citable-id").val());
    }
    else {
      $.ajax({
        type: "POST",
        url: "<%= sources_path %>",
        data: {
          source: {
            name: $("#quote_name").val()
          }
        }
      }).success(function(data) {
        successTrigger(data.id);
      }).fail(function() {
        alert("error");
      });
    }
    return false;
  });
</script>
